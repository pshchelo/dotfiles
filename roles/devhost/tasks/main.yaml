- name: add ppa repos
  become: true
  apt_repository:
    repo: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ ppa_repos }}"
  when: ansible_distribution == 'Ubuntu'

- name: install packages for development
  become: true
  apt:
    pkg: "{{ item }}"
  with_items: "{{ ubuntu_packages }}"
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'

- name: fetch pip bootstrapper script
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp/get-pip.py
    force: yes

- name: install pip
  become: true
  command: python /tmp/get-pip.py

- name: install global python packages
  become: true
  pip:
    name: "{{ item }}"
  with_items: "{{ global_python }}"

- name: create dotfiles by cloning
  git:
    repo: git@github.com:{{ username }}/dotfiles.git
    dest: "{{ dotfiles_dir }}"
    accept_hostkey: yes
    key_file: "{{ userhome }}/.ssh/git_rsa"
    update: no

- name: backup some files
  shell: mv {{ item }} {{ item }}.orig
  args:
    creates: "{{ item }}.orig"
    removes: "{{ item }}"
  with_items: "{{ files_to_backup }}"

- name: create some folders
  file:
    path: "{{ item }}"
    state: directory
  with_items: "{{ dirs_to_create }}"

- name: make links
  file:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    state: link
  with_items: "{{ links_to_create }}"

- name: make dir for vim-plug
  file:
    path: "{{ userhome }}/.vim/autoload"
    state: directory

- name: install/update vim-plug
  get_url:
    dest: "{{ userhome }}/.vim/autoload/plug.vim"
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    force: yes

- name: install all vim plugins
  command: vim +PlugUpdate +qall
  args:
    creates: "{{ userhome }}/.vim/plugged"
