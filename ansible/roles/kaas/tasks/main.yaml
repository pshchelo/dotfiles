- name: copy kubeconfig
  become: yes
  copy:
    src: /root/.kube
    dest: "{{ ansible_user_dir }}"
    remote_src: true
    owner: "{{ ansible_user_id }}"

- name: ensure bash completion folder exists
  file:
    path: "{{ ansible_user_dir }}/.local/share/bash-completion/completions"
    state: directory

- name: create kubectl bash auto-completion if missing
  shell: "kubectl completion bash > {{ ansible_user_dir }}/.local/share/bash-completion/completions/kubectl"
  args:
    creates: "{{ ansible_user_dir }}/.local/share/bash-completion/completions/kubectl"

- name: clone openstack-controller
  git:
    repo: ssh://pshchelokovskyy@gerrit.mcp.mirantis.com:29418/mcp/openstack-controller
    dest: "{{ ansible_user_dir }}/openstack-controller"
    accept_hostkey: true

- name: install openstack-controller dependencies
  become: yes
  apt:
    pkg:
      - python3.7-dev

- name: install latest tox
  become: yes
  pip:
    name: tox
    state: latest

# NOTE(pas-ha) k9s repo for now has 'pre-releases' only,
# so <repo>/releases/latest API is useless
- name: get k9s releases
  uri:
    url: https://api.github.com/repos/derailed/k9s/releases
  register: k9s_releases

- name: get latest k9s tag
  set_fact:
    k9s_tag_latest: "{{ k9s_releases.json | map(attribute='tag_name') | max }}"

# TODO: pull URL of the latest Linux_x86_64 artifact from JSON response
# jq '. | max_by(.tag_name) | .assets | map(select(.name | contains("Linux_x86_64"))) | .[0].browser_download_url'
#- name: get artefact url
#  set_fact:
#    k9s_url: "{{ k9s_releases.json | max(attribute='tag_name') | attr('assets') | selectattr('name', 'match', 'Linux_x86_64') | map(attribute='browser_download_url') | first }}"

- name: install latest k9s release
  unarchive:
    remote_src: yes
    src: https://github.com/derailed/k9s/releases/download/{{ k9s_tag_latest }}/k9s_{{ k9s_tag_latest[1:] if k9s_tag_latest.startswith('v') else k9s_tag_latest }}_Linux_x86_64.tar.gz
    dest: "{{ ansible_user_dir }}/.local/bin/"
    keep_newer: yes
    extra_opts:
      - "k9s"

- name: create config dir for k9s
  file:
    path: "{{ ansible_user_dir }}/.k9s"
    state: directory

# from the available ones works best with my solarized terminal
- name: install dracula colorscheme for k9s
  get_url:
    url: https://raw.githubusercontent.com/derailed/k9s/{{ k9s_tag_latest }}/skins/dracula.yml
    dest: "{{ ansible_user_dir }}/.k9s/skin.yml"
    force: yes

- name: get latest yq release
  uri:
    url: https://api.github.com/repos/mikefarah/yq/releases/latest
  register: yq_latest

- name: download latest yq
  get_url:
    url: "{{yq_latest.json.assets | selectattr('name', 'eq', 'yq_linux_amd64')| map(attribute='browser_download_url')|first}}"
    dest: "{{ansible_user_dir}}/.local/bin/yq"
    mode: "u+x"

- name: get latest metrics-server tag
  uri:
    url: https://api.github.com/repos/kubernetes-sigs/metrics-server/releases/latest
  register: metrics_server_latest

- name: clone metrics-server
  git:
    repo: https://github.com/kubernetes-sigs/metrics-server
    dest: "{{ ansible_user_dir }}/metrics-server"
    depth: 1
    version: "{{ metrics_server_latest.json.tag_name }}"
# TODO: patch metrics-server-deployment with files/metrics-server.patch
