#!/usr/bin/env bash

function usage {
    echo "Usage: $(basename "$0") [-qhwrt N] [inputfile]" 2>&1
    echo "Diff OpenStackDeployment resource, apply it after confirmation, wait for the OpenStackDeploymentStatus resource to become APPLIED."
    echo "Expects a single OpenStackDeployment[Status] resource in the 'openstack' namespace"
    echo "  -t <INT> polling interval in seconds, defaults to 10"
    echo "  -q       quiet, do not print visual confirmation of waiting"
    echo "  -w       wait only, do not diff and apply"
    echo "  -r       also wait for all services to become Ready"
    echo "  -h       print this message and exit"
    echo "  -v       verbose (bash -x)"
}

POLL_TIMEOUT=10
QUIET=0
WAIT_ONLY=0
WAIT_READY=0

while getopts ':qvwht:r' arg; do
    case "${arg}" in
        w) WAIT_ONLY=1;;
        q) QUIET=1;;
        t) POLL_TIMEOUT="${OPTARG}";;
        r) WAIT_READY=1;;
        v) set -x;;
        h) usage; exit 0;;
        *) usage; exit 1;;
    esac
done

infile=${*:$OPTIND:1}
if [ -z "$infile" ]; then
    infile=osdpl.yaml
fi

function osdpl_wait_applied {
    osdplst=$(kubectl -n openstack get osdplst --no-headers | awk '{print $1}')
    until [ "$(kubectl -n openstack get osdplst "$osdplst" -ojsonpath='{.status.osdpl.state}')" == "APPLIED" ]; do
        sleep "$POLL_TIMEOUT";
        if [ "$QUIET" == 0 ]; then
            echo -n "."
        fi
    done
}

function osdpl_wait_ready {
    osdplst=$(kubectl -n openstack get osdplst --no-headers | awk '{print $1}')
    until [ "$(kubectl get osdplst "$osdplst" -ojson | jq -r '[.status.health[][].status]|sort|unique[]')" == "Ready" ]; do
        sleep "$POLL_TIMEOUT";
        if [ "$QUIET" == 0 ]; then
            echo -n "."
        fi
    done
}

if ! grep "kind: OpenStackDeployment$" "$infile" > /dev/null ; then
    echo "$infile" has no OpenStackDeployment in it!
    exit 1
fi

if [ "$WAIT_ONLY" -eq 0 ]; then
    KUBECTL_EXTERNAL_DIFF="diff -u -N --color" kubectl diff -f "$infile"
    ret=$?
    if [ $ret -eq  0 ]; then
        echo No changes!
        exit 0
    fi
    read -p "Are you sure? [Y/n]: " -n 1 -r
    if [[ $REPLY =~ ^[Yy]$ || $REPLY = "" ]]; then
        kubectl apply -f "$infile"
        sleep 3
    else
        echo
        echo "Aborting"
        exit 0
    fi
fi
osdpl_wait_applied

if [ "$WAIT_READY" -eq 1 ]; then
    echo
    echo "OsDpl was applied, waiting for health to be all Ready"
    osdpl_wait_ready
fi
