#!/usr/bin/env bash
HLP_MSG="Usage: $0 (u[p]|d[own]|h[elp]) [connection]"
DEFAULT_CONNECTION="Cato"
PID_FILE="/tmp/vpn-ssh-tunnel.pid"
action=$1
conn=${2:-$DEFAULT_CONNECTION}
JUMPHOST=""

function vpn_up {
    if [ "$conn" = "Cato" ]; then
        catovpn_up
    else
        openvpn_up
    fi
}

function vpn_down {
    if [ "$conn" = "Cato" ]; then
        catovpn_down
    else
        openvpn_down
    fi
}

function catovpn_up {
    if cato-sdp status | grep -q "^Cato client is disconnected"; then
        cato-sdp start --use-systemd-resolv --route 172.16.0.0/12 --metric 1000
        sudo ip route add 172.16.0.0/12 dev tun0
        if [ -n "$JUMPHOST" ]; then
            echo "Connecting to jumphost $JUMPHOST"
            ssh -fND 8181 "$JUMPHOST"
            pgrep -f "ssh -fND 8181 $JUMPHOST" > $PID_FILE
        fi
    else
        echo "Already connected"
    fi
}

function catovpn_down {
    if [ -f /tmp/vpn-ssh-tunnel.pid ]; then
        echo "Disconnecting from jumphost"
        kill -9 "$(cat $PID_FILE)"
        rm "$PID_FILE"
    fi
    if cato-sdp status | grep -q "^Cato client is disconnected" ; then
        echo "Already disconnected"
    else
        cato-sdp stop
    fi
}

function openvpn_up {
if [ -z  "$(nmcli connection show --active "$conn")" ]; then
    nmcli connection up "$conn"
fi
}

function openvpn_down {
if [ -n "$(nmcli connection show --active "$conn")" ]; then
    nmcli connection down "$conn"
fi
}

case $action in
    up|u)
        vpn_up
        ;;
    down|d)
        vpn_down
        ;;
    help|h)
        echo "$HLP_MSG"
        exit 0
        ;;
    *)
        echo "$HLP_MSG"
        exit 1
        ;;
esac
